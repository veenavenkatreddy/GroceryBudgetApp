extends layout

block content
  // Budget Header
  .dashboard-header.mb-4
    .d-flex.flex-column.flex-md-row.justify-content-between.align-items-start.align-items-md-center.gap-3
      div
        h1.dashboard-title.mb-1= budget.name
        p.dashboard-subtitle.text-muted.mb-0 Budget Details and Analysis
      .d-flex.flex-wrap.gap-2
        a.btn.btn-outline-primary(href='/budgets')
          i.bi.bi-arrow-left.me-2
          | Back to Budgets
        button.btn.btn-primary(onclick=`downloadBudgetPDF('${budget._id}')`)
          i.bi.bi-download.me-2
          | Download PDF
        if budget.isActive
          button.btn.btn-success(data-bs-toggle='modal' data-bs-target='#addItemModal')
            i.bi.bi-plus-lg.me-2
            | Add Item

  // Overview Metrics
  .row.row-cols-1.row-cols-sm-2.row-cols-lg-4.g-3.mb-4
    .col
      .card.h-100.shadow-sm
        .card-body
          .d-flex.justify-content-between.align-items-start.mb-2
            .icon.bg-primary.bg-opacity-10.text-primary.p-2.rounded
              i.bi.bi-wallet2
            small.text-muted #{new Date(budget.period.start).toLocaleDateString()} - #{new Date(budget.period.end).toLocaleDateString()}
          h5.mb-0= CurrencyHelper.format(budget.totalLimit, userCurrency)
          small.text-muted Total Budget
    .col
      .card.h-100.shadow-sm
        .card-body
          .d-flex.justify-content-between.align-items-start.mb-2
            .icon.bg-success.bg-opacity-10.text-success.p-2.rounded
              i.bi.bi-bag-check
            span(class=budget.percentageSpent > 75 ? 'text-danger' : 'text-success') #{budget.percentageSpent.toFixed(1)}%
          h5.mb-0= CurrencyHelper.format(budget.currentSpent, userCurrency)
          small.text-muted Amount Spent
    .col
      .card.h-100.shadow-sm
        .card-body
          .d-flex.justify-content-between.align-items-start.mb-2
            .icon.bg-warning.bg-opacity-10.text-warning.p-2.rounded
              i.bi.bi-piggy-bank
            span(class=budget.remainingBudget < 0 ? 'text-danger' : 'text-success') #{budget.remainingBudget < 0 ? 'Over budget' : 'Available'}
          h5.mb-0= CurrencyHelper.format(budget.remainingBudget, userCurrency)
          small.text-muted Remaining
    .col
      .card.h-100.shadow-sm
        .card-body
          .d-flex.justify-content-between.align-items-start.mb-2
            .icon(class=budget.isActive ? 'bg-success bg-opacity-10 text-success' : 'bg-info bg-opacity-10 text-info').p-2.rounded
              i.bi(class=budget.isActive ? 'bi-check-circle' : 'bi-archive')
          h5.mb-0= budget.isActive ? 'Active' : 'Completed'
          small.text-muted Status

  // Alerts
  if alerts && alerts.length > 0
    .mb-4
      each alert in alerts
        .alert(class=`alert-${alert.type === 'critical' ? 'danger' : alert.type === 'warning' ? 'warning' : 'info'} d-flex align-items-center mb-2`)
          i.bi(class=alert.type === 'critical' ? 'bi-exclamation-triangle-fill' : alert.type === 'warning' ? 'bi-exclamation-triangle' : 'bi-info-circle').me-2
          = alert.message

  // Progress Bar
  .card.mb-4.shadow-sm
    .card-body
      .d-flex.justify-content-between.mb-2
        span.fw-semibold Budget Usage
        small.text-muted #{budget.percentageSpent.toFixed(1)}% Used
      .progress(style='height: 20px;')
        .progress-bar(
          class=budget.percentageSpent > 90 ? 'bg-danger' : budget.percentageSpent > 75 ? 'bg-warning' : 'bg-success'
          style=`width: ${Math.min(budget.percentageSpent, 100)}%`
        )
          small.text-white.ms-2 #{CurrencyHelper.format(budget.currentSpent, userCurrency)} / #{CurrencyHelper.format(budget.totalLimit, userCurrency)}

  // Charts + Items
  .row
    .col-lg-6
      .card.mb-4.shadow-sm
        .card-body
          h5.mb-3
            i.bi.bi-pie-chart.me-2
            | Category Breakdown
          if categorySpending && categorySpending.length > 0
            .chart-container(style='position: relative; height: 300px; width: 100%;')
              canvas#categoryChart
            .chart-legend#categoryLegend.mt-3
          else
            .text-center.py-4
              i.bi.bi-pie-chart.display-4.text-muted.mb-3
              h6.mb-1 No spending data
              small.text-muted Add items to see category breakdown
    .col-lg-6
      .card.mb-4.shadow-sm
        .card-body.p-0
          h5.p-3.mb-0.border-bottom
            i.bi.bi-list-ul.me-2
            | Recent Items
          if items && items.length > 0
            .table-responsive
              table.table.table-hover.mb-0
                thead
                  tr
                    th Item
                    th Category
                    th.text-end Price
                    th.text-end Qty
                    th.text-end Total
                tbody
                  each item in items.slice(0, 10)
                    tr
                      td
                        strong= item.name
                        if item.notes
                          .small.text-muted= item.notes
                      td
                        span.badge.bg-light.text-dark= item.categoryId ? item.categoryId.name : 'Uncategorized'
                      td.text-end £#{item.price.toFixed(2)}
                      td.text-end= item.quantity || 1
                      td.text-end.fw-semibold £#{(item.price * (item.quantity || 1)).toFixed(2)}
            if items.length > 10
              .p-3.text-center.border-top
                a.btn.btn-sm.btn-outline-primary(href='/items') View All #{items.length} Items
          else
            .text-center.py-4
              i.bi.bi-basket.display-4.text-muted.mb-3
              h6.mb-1 No items yet
              small.text-muted Start adding grocery items to track spending
              if budget.isActive
                .mt-3
                  button.btn.btn-primary(data-bs-toggle='modal' data-bs-target='#addItemModal') Add First Item

  // Add Item Modal
  if budget.isActive
    .modal.fade#addItemModal(tabindex='-1')
      .modal-dialog
        .modal-content
          .modal-header
            h5.modal-title Add New Item
            button.btn-close(type='button' data-bs-dismiss='modal')
          .modal-body
            form#addItemForm
              .form-floating.mb-3
                input.form-control#itemName(type='text' placeholder='Item name' required)
                label(for='itemName') Item Name
              .row.g-3.mb-3
                .col-md-6
                  .form-floating
                    input.form-control#itemPrice(type='number' step='0.01' min='0' placeholder='0.00' required)
                    label(for='itemPrice') Price (£)
                .col-md-6
                  .form-floating
                    input.form-control#itemQuantity(type='number' min='1' value='1' placeholder='1')
                    label(for='itemQuantity') Quantity
              .form-floating.mb-3
                select.form-control#itemCategory(required)
                  option(value='') Select a category
                label(for='itemCategory') Category
              .form-floating.mb-3
                input.form-control#purchaseDate(type='date')
                label(for='purchaseDate') Purchase Date
              .form-check.mb-3
                input.form-check-input#isEssential(type='checkbox')
                label.form-check-label(for='isEssential') Mark as Essential Item
              .form-floating.mb-3
                textarea.form-control#itemNotes(style='height: 80px;' placeholder='Optional notes')
                label(for='itemNotes') Notes (Optional)
          .modal-footer
            button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Cancel
            button.btn.btn-primary(type='button' onclick='addItemToBudget()')
              i.bi.bi-plus-circle.me-2
              | Add Item

block scripts
  script.
    // keep your Chart.js + category loading + item adding logic unchanged
