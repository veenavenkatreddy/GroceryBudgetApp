doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    meta(name='description' content='Login to CartWise - Shop Smart, Save More')
    title Login - CartWise
    
    // Bootstrap CSS
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css' rel='stylesheet')
    link(href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css' rel='stylesheet')
    
    // Google Fonts
    link(rel='preconnect' href='https://fonts.googleapis.com')
    link(rel='preconnect' href='https://fonts.gstatic.com' crossorigin)
    link(href='https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap' rel='stylesheet')
    
    // Custom CSS
    link(rel='stylesheet' href='/css/auth.css')
  
  body
    .auth-wrapper.d-flex.align-items-center.justify-content-center.min-vh-100
      .auth-container.w-100.px-3(style='max-width: 420px;')
        .auth-card.p-4.shadow-sm.rounded
          .text-center.mb-4
            a.navbar-brand(href='/')
              i.bi.bi-cart3.me-2.text-primary(style='font-size: 2rem;')
              h2.fw-bold.mb-0 CartWise
            p.text-muted.mt-2 Welcome back! Please login to your account.
          
          if error
            .alert.alert-danger.d-flex.align-items-center(role='alert')
              i.bi.bi-exclamation-circle.me-2
              div= error
          
          if success
            .alert.alert-success.d-flex.align-items-center(role='alert')
              i.bi.bi-check-circle.me-2
              div= success
          
          form#loginForm.needs-validation(novalidate)
            .form-floating.mb-3.position-relative
              input.form-control#username(type='text' placeholder='Username or Email' required autofocus)
              label(for='username') Username or Email
              .form-icon.position-absolute.top-50.end-0.translate-middle-y.pe-3
                i.bi.bi-person
              .invalid-feedback Please enter your username or email.
            
            .form-floating.mb-3.position-relative
              input.form-control#password(type='password' placeholder='Password' required)
              label(for='password') Password
              .form-icon.position-absolute.top-50.end-0.translate-middle-y.pe-5
                i.bi.bi-lock
              button.btn.btn-link.password-toggle#togglePassword(type='button' tabindex='-1')
                i.bi.bi-eye
              .invalid-feedback Please enter your password.
            
            .d-flex.justify-content-between.align-items-center.mb-4
              .form-check.mb-0
                input.form-check-input#rememberMe(type='checkbox')
                label.form-check-label(for='rememberMe') Remember me
            
            .d-grid.gap-3
              button.btn.btn-primary.btn-lg(type='submit')
                | Sign In
                i.bi.bi-arrow-right.ms-2
          
          .text-center.mt-4
            p.mb-0.text-muted
              | Don't have an account? 
              a.text-primary.text-decoration-none.fw-semibold(href='/register') Sign up for free

    // Bootstrap JS
    script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js')
    
    // Custom JS
    script.
      // Bootstrap form validation
      (() => {
        'use strict';
        const form = document.getElementById('loginForm');
        form.addEventListener('submit', e => {
          if (!form.checkValidity()) {
            e.preventDefault();
            e.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      })();
      
      // Auto-login if token exists
      document.addEventListener('DOMContentLoaded', async () => {
        sessionStorage.removeItem('redirecting');
        const token = localStorage.getItem('token');
        if (token && !sessionStorage.getItem('skipAutoLogin')) {
          const authCard = document.querySelector('.auth-card');
          const originalContent = authCard.innerHTML;
          authCard.innerHTML = `
            <div class="text-center py-5">
              <div class="spinner-border text-primary mb-3" role="status">
                <span class="visually-hidden">Loading...</span>
              </div>
              <p class="text-muted">Checking authentication...</p>
            </div>
          `;
          sessionStorage.setItem('skipAutoLogin', 'true');
          try {
            const res = await fetch('/api/auth/verify', {
              method: 'GET',
              headers: { 'Authorization': 'Bearer ' + token }
            });
            if (res.ok) {
              window.location.replace('/dashboard');
              return;
            } else {
              localStorage.clear();
              sessionStorage.removeItem('skipAutoLogin');
            }
          } catch {
            localStorage.clear();
            sessionStorage.removeItem('skipAutoLogin');
          }
          authCard.innerHTML = originalContent;
        }
        setTimeout(() => sessionStorage.removeItem('skipAutoLogin'), 1000);
      });

      // Login handler
      document.getElementById('loginForm').addEventListener('submit', async e => {
        e.preventDefault();
        if (!e.target.checkValidity()) return;
        const btn = e.target.querySelector('button[type="submit"]');
        const originalText = btn.innerHTML;
        btn.disabled = true;
        btn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Signing in...';
        const payload = {
          username: document.getElementById('username').value.trim(),
          password: document.getElementById('password').value
        };
        try {
          const res = await fetch('/api/auth/login', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
          });
          const data = await res.json();
          if (data.success) {
            localStorage.setItem('token', data.token);
            localStorage.setItem('user', JSON.stringify(data.user));
            window.location.href = '/dashboard';
          } else {
            showAlert('danger', data.message || 'Login failed');
          }
        } catch {
          showAlert('danger', 'An error occurred. Please try again.');
        } finally {
          btn.disabled = false;
          btn.innerHTML = originalText;
        }
      });

      // Toggle password visibility
      document.getElementById('togglePassword').addEventListener('click', function() {
        const input = document.getElementById('password');
        const icon = this.querySelector('i');
        if (input.type === 'password') {
          input.type = 'text';
          icon.classList.replace('bi-eye', 'bi-eye-slash');
        } else {
          input.type = 'password';
          icon.classList.replace('bi-eye-slash', 'bi-eye');
        }
      });

      // Toast/alert helper
      function showAlert(type, message) {
        const alert = document.createElement('div');
        alert.className = `alert alert-${type} alert-dismissible d-flex align-items-center mt-3`;
        alert.role = 'alert';
        alert.innerHTML = `
          <i class="bi bi-${type === 'danger' ? 'exclamation-circle' : 'check-circle'} me-2"></i>
          <div>${message}</div>
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        const existing = document.querySelector('.auth-card .alert');
        if (existing) existing.remove();
        document.querySelector('.auth-card').prepend(alert);
      }
